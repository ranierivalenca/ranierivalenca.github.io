import{d as _,u as f,a as y,c as B,r,M as x,w as T,o as V,b as L,e as p,f as N,g as c,h as C,i as v,j as E,F as I,k as O,l as w,m as P,n as S,p as g}from"./index-CrGxUJMG.js";const A={key:0,class:"loading"},H={class:"main-wrapper"},R=["innerHTML"],D=_({__name:"MainView",setup(b){var i;const h=f(),k=y(),u=L(),F=P(),l=B(()=>h.activeFile),t=r(""),s=new x,a=r(s.render(((i=l.value)==null?void 0:i.getMarkdown())||"")),o=r(!1);function M(e){console.log({path:e,data:w});const n=w.getNodeByPath(e);if(!(n!=null&&n.isFile())){console.warn("TODO: treat directory paths",e);return}if(k.openFile(n.getAsFile()),console.log({file:n}),!n){console.warn("File not found",e);return}}return T(()=>l.value,async e=>{if(!e)return;if(e.isMarkdownSet()){a.value=s.render(e.getMarkdown());return}a.value="",o.value=!0;const d=await(await fetch(`/data/${e.getPath()}.md`)).text();console.log({text:d}),e.setMarkdown(d),setTimeout(async()=>{if(a.value=s.render((e==null?void 0:e.getMarkdown())||""),o.value=!1,t.value){F.push({hash:t.value}),await S();const m=document.getElementById(t.value.slice(1));m&&m.scrollIntoView()}},500)}),V(()=>{t.value=u.hash,M(u.params.path)}),(e,n)=>(g(),p(O,null,[o.value?(g(),p("div",A,[C(v(I),{icon:v(E),spin:""},null,8,["icon"]),n[0]||(n[0]=c("span",null," Loading... ",-1))])):N("",!0),c("div",H,[c("main",{innerHTML:a.value},null,8,R)])],64))}});export{D as default};
